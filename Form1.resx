<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox13.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SUVORK5CYII=
</value>
  </data>
</root>