<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox13.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>